"use strict";(self.webpackChunkathena_wiki=self.webpackChunkathena_wiki||[]).push([[437],{10:function(e,n,t){t.d(n,{t:function(){return m}});var r=t(885),o=t(2791),a=t(4242),s=t(1370),c=t(1215),i="style_button__0wQan",u="style_active__pIfM9",d=t(184),l=o.forwardRef((function(e,n){var t=e.code,l=e.name,m=(0,o.useRef)(null),f=(0,o.useReducer)((function(e){return!e}),!1),h=(0,r.Z)(f,2),p=h[0],w=h[1];return(0,o.useImperativeHandle)(n,(function(){return{canvas:m.current}}),[]),(0,d.jsxs)("div",{style:{height:"100%",overflow:"hidden"},children:[(0,d.jsxs)("div",{className:"".concat(i," ").concat(p?u:""),onClick:w,children:[(0,d.jsx)(c.J,{type:"typescript",marginRight:p?8:0}),p?l:""]}),(0,d.jsx)(a.Z,{style:s.Z,language:"typescript",showLineNumbers:!0,customStyle:{fontFamily:'Menlo, Monaco, "Courier New", monospace',fontSize:"12px",position:"absolute",lineHeight:"20px",top:24,left:0,right:0,bottom:0,opacity:p?1:0,pointerEvents:p?"unset":"none",transition:"all 0.3s ease-in-out"},children:t}),(0,d.jsx)("canvas",{ref:m})]})})),m=function(e,n,t){var r=(0,o.useRef)(null);return(0,o.useEffect)((function(){return e(r.current.canvas)}),[]),(0,d.jsx)(l,{ref:r,code:n,name:t})}},5437:function(e,n,t){t.r(n);var r=t(8166),o=t(10),a=function(e){for(var n=new r.PerspectiveCamera({position:new r.Vector3(10,10,10),lookAt:new r.Vector3(0,0,0),fov:60}),t=new r.Renderer({canvas:e,camera:n}),o=function(){return 20*(Math.random()-.5)},a=[],s=0;s<100;s++){var c=new r.Mesh({geometry:new r.CubeGeometry,material:new r.NormalMaterial});c.position.set(o(),o(),o()),c.rotation.set(o(),o(),o()),t.scene.add(c),a.push(c)}return t.onUpdate((function(){t.scene.rotation.y=Date.now()/1e3})),t.start(),function(){t.stop(),t.destroy()}};n.default=function(){return(0,o.t)(a,"import * as Athena from 'athena3d';\n\nexport const bootstrap = (canvas: HTMLCanvasElement) => {\n\n  const CUBE_COUNT = 100;\n\n  const camera = new Athena.PerspectiveCamera({\n    position: new Athena.Vector3(10, 10, 10),\n    lookAt: new Athena.Vector3(0, 0, 0),\n    fov: 60\n  });\n  const renderer = new Athena.Renderer({ canvas, camera });\n  \n  const random = () => (Math.random() - 0.5) * 20;\n  const cubes: Athena.Mesh[] = [];\n\n  for (let x = 0; x < CUBE_COUNT; x++) {\n    const cube = new Athena.Mesh({\n      geometry: new Athena.CubeGeometry(),\n      material: new Athena.NormalMaterial()\n    });\n    cube.position.set(random(), random(), random());\n    cube.rotation.set(random(), random(), random());\n    renderer.scene.add(cube);\n    cubes.push(cube);\n  }\n\n  renderer.onUpdate(() => {\n    renderer.scene.rotation.y = Date.now() / 1000;\n  });\n  \n  renderer.start();\n\n  return () => {\n    renderer.stop();\n    renderer.destroy();\n  }\n  \n}","rotating_cubes.ts")}}}]);
//# sourceMappingURL=437.c1c62b68.chunk.js.map