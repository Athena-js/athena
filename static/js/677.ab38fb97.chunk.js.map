{"version":3,"file":"static/js/677.ab38fb97.chunk.js","mappings":"kMACA,EAA0D,sBAA1D,EAAyF,sB,SCU5EA,EAAUC,EAAAA,YAAiB,WAAwBC,GAAS,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,KACzCC,GAAYC,EAAAA,EAAAA,QAA0B,MAC5C,GAAiCC,EAAAA,EAAAA,aAAW,SAAAC,GAAC,OAAKA,KAAG,GAArD,eAAOC,EAAP,KAAiBC,EAAjB,KAMA,OAJAC,EAAAA,EAAAA,qBAAoBT,GAAK,iBAAO,CAC9BU,OAAQP,EAAUQ,WAChB,KAGF,iBAAKC,MAAO,CAAEC,OAAQ,OAAQC,SAAU,UAAxC,WACE,iBACEC,UAAS,UAAKH,EAAL,YAAqBL,EAAWK,EAAe,IACxDI,QAASR,EAFX,WAGE,SAACS,EAAA,EAAD,CAAMC,KAAK,aAAaC,YAAaZ,EAAW,EAAI,IACnDA,EAAWL,EAAO,OAErB,SAAC,IAAD,CACEU,MAAOQ,EAAAA,EACPC,SAAS,aACTC,iBAAe,EACfC,YAAa,CACXC,WAAY,0CACZC,SAAU,OACVC,SAAU,WACVC,WAAY,OACZC,IAAK,GACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,QAASzB,EAAW,EAAI,EACxB0B,cAAe1B,EAAW,QAAU,OACpC2B,WAAY,wBAfhB,SAiBGjC,KAEH,mBAAQD,IAAKG,UAKNgC,EAAa,SACxBC,EACAnC,EACAC,GAEA,IAAMF,GAAMI,EAAAA,EAAAA,QAAsC,MAElD,OADAiC,EAAAA,EAAAA,YAAU,kBAAMD,EAAUpC,EAAIW,QAASD,UAAS,KACzC,SAACZ,EAAD,CAASE,IAAKA,EAAKC,KAAMA,EAAMC,KAAMA,M,+ECvDxCkC,EAAY,SAAC1B,GAEjB,IAAM4B,EAAS,IAAIC,EAAAA,kBAAyB,CAC1Cb,SAAU,IAAIa,EAAAA,SAAgB,IAAK,GAAK,MACxCC,IAAK,KAGDC,EAAW,IAAIF,EAAAA,SAAgB,CAAE7B,OAAAA,EAAQ4B,OAAAA,IACzCI,EAAW,IAAIH,EAAAA,aAAoBD,EAAQ5B,GAwBjD,OAtBA,iBAAC,yGACuB,IAAI6B,EAAAA,eAAuBI,iBAAiB,CAChE,+BACA,+BACA,+BACA,+BACA,+BACA,iCAPH,cACOC,EADP,OASOC,EAAS,IAAIN,EAAAA,OAAcK,GACjCH,EAASK,QAAUF,EACnBH,EAASM,MAAMC,IAAIH,GAXpB,UAaqB,IAAIN,EAAAA,YAAoBU,UAAU,6BAbvD,OAaOC,EAbP,OAcCT,EAASM,MAAMC,IAAIE,GACnBT,EAASU,QAfV,2CAAD,GAkBAV,EAASW,UAAS,WAChBV,EAASW,YAGJ,WACLZ,EAASa,OACTb,EAASc,UACTb,EAASc,YA+Cb,qBAAe,OAAMrB,EAAAA,EAAAA,GAAWC,EA1CtB,ulCA0CuC,sB,qBCrFjD,SAASqB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIxB,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,GAGnEjB,OAAMkB,O","sources":["webpack://athena-wiki/./src/components/Example/style.module.scss?46a9","components/Example/index.tsx","examples/orbit_control.tsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"style_wrapper__RowqQ\",\"button\":\"style_button__0wQan\",\"active\":\"style_active__pIfM9\"};","import React, { useReducer, useRef, useImperativeHandle, useEffect } from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { tomorrowNightBright } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { Icon } from '../Icon';\nimport style from './style.module.scss';\n\ninterface Props {\n  code: string;\n  name: string;\n}\n\nexport const Example = React.forwardRef(({ code, name }: Props, ref) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [isActive, toggleActive] = useReducer(s => !s, false);\n\n  useImperativeHandle(ref, () => ({\n    canvas: canvasRef.current!\n  }), []);\n\n  return (\n    <div style={{ height: '100%', overflow: 'hidden' }}>\n      <div\n        className={`${style.button} ${isActive ? style.active : ''}`}\n        onClick={toggleActive}>\n        <Icon type=\"typescript\" marginRight={isActive ? 8 : 0} />\n        {isActive ? name : '' }\n      </div>\n      <SyntaxHighlighter\n        style={tomorrowNightBright}\n        language=\"typescript\"\n        showLineNumbers\n        customStyle={{ \n          fontFamily: 'Menlo, Monaco, \"Courier New\", monospace',\n          fontSize: '12px',\n          position: 'absolute',\n          lineHeight: '20px',\n          top: 24,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          opacity: isActive ? 1 : 0,\n          pointerEvents: isActive ? 'unset' : 'none',\n          transition: 'all 0.3s ease-in-out',\n        }}>\n        {code}\n      </SyntaxHighlighter>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n});\n\nexport const useExample = (\n  bootstrap: (canvas: HTMLCanvasElement) => any,\n  code: string,\n  name: string,\n) => {\n  const ref = useRef<{ canvas: HTMLCanvasElement }>(null);\n  useEffect(() => bootstrap(ref.current!.canvas), []);\n  return <Example ref={ref} code={code} name={name} />\n}","import * as Athena from 'athena3d';\nimport { useExample } from '../components/Example';\n\nconst bootstrap = (canvas: HTMLCanvasElement) => {\n\n  const camera = new Athena.PerspectiveCamera({\n    position: new Athena.Vector3(-1.8, 0.6, 2.73),\n    fov: 45\n  });\n\n  const renderer = new Athena.Renderer({ canvas, camera });\n  const controls = new Athena.OrbitControl(camera, canvas);\n  \n  (async () => {\n    const texture = await new Athena.TextureLoader().loadCubemapAsync([\n      '/assets/skybox/google/px.png',\n      '/assets/skybox/google/nx.png',\n      '/assets/skybox/google/py.png',\n      '/assets/skybox/google/ny.png',\n      '/assets/skybox/google/pz.png',\n      '/assets/skybox/google/nz.png'\n    ]);\n    const skybox = new Athena.Skybox(texture);\n    renderer.cubemap = texture;\n    renderer.scene.add(skybox);\n\n    const model = await new Athena.GLTFLoader().loadAsync('/assets/models/helmet.glb');\n    renderer.scene.add(model);\n    renderer.start();\n  })();\n\n  renderer.onUpdate(() => {\n    controls.update();\n  });\n\n  return () => {\n    renderer.stop();\n    renderer.destroy();\n    controls.destory();\n  }\n  \n}\n\nconst code = `import * as Athena from 'athena3d';\n\nconst bootstrap = (canvas: HTMLCanvasElement) => {\n\n  const camera = new Athena.PerspectiveCamera({\n    position: new Athena.Vector3(-1.8, 0.6, 2.73),\n    fov: 45\n  });\n\n  const renderer = new Athena.Renderer({ canvas, camera });\n  const controls = new Athena.OrbitControl(camera, canvas);\n  \n  (async () => {\n    const texture = await new Athena.TextureLoader().loadCubemapAsync([\n      '/assets/skybox/google/px.png',\n      '/assets/skybox/google/nx.png',\n      '/assets/skybox/google/py.png',\n      '/assets/skybox/google/ny.png',\n      '/assets/skybox/google/pz.png',\n      '/assets/skybox/google/nz.png'\n    ]);\n    const skybox = new Athena.Skybox(texture);\n    renderer.cubemap = texture;\n    renderer.scene.add(skybox);\n\n    const model = await new Athena.GLTFLoader().loadAsync('/assets/models/helmet.glb');\n    renderer.scene.add(model);\n    renderer.start();\n  })();\n\n  renderer.onUpdate(() => {\n    controls.update();\n  });\n\n  return () => {\n    renderer.stop();\n    renderer.destroy();\n    controls.destory();\n  }\n  \n}`;\n\nexport default () => useExample(bootstrap, code, 'orbit_control.ts');","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Example","React","ref","code","name","canvasRef","useRef","useReducer","s","isActive","toggleActive","useImperativeHandle","canvas","current","style","height","overflow","className","onClick","Icon","type","marginRight","tomorrowNightBright","language","showLineNumbers","customStyle","fontFamily","fontSize","position","lineHeight","top","left","right","bottom","opacity","pointerEvents","transition","useExample","bootstrap","useEffect","camera","Athena","fov","renderer","controls","loadCubemapAsync","texture","skybox","cubemap","scene","add","loadAsync","model","start","onUpdate","update","stop","destroy","destory","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}